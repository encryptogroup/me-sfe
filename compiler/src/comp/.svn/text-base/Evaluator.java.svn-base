package comp;


import java.math.BigInteger;

import crypt.Present;

import YaoGC.BarrelShifter;
import YaoGC.BitMask;
import YaoGC.Circuit;
import YaoGC.FastMUL_L_M;
import YaoGC.HALF_SUB_2_2;
import YaoGC.MUL_L_M;
import YaoGC.NOT_1_1;
import YaoGC.SUB_2L_L;
import YaoGC.State;
import YaoGC.PRESENTcomponents.PresentFull;

public class Evaluator {

	public static void evaluateCircuit(Circuit c, State inputState){
		State outputState = c.startExecuting(inputState);
		BigInteger output = BigInteger.ZERO;
		for(int i=0; i<outputState.getWidth(); i++){
			if(outputState.wires[i].value == 1){
				output = output.setBit(i);
			}
		}
		System.out.println("Output: " + output.toString(2));
	}
	
	/**
	 * @param args
	 */
	public static void main(String[] args) throws Exception{
		Circuit c = new FastMUL_L_M(8, 8);
		c.build();
		State x = new State(BigInteger.valueOf(143),8);
		State y = new State(BigInteger.valueOf(3),8);
		State input = State.concatenate(y, x);
		evaluateCircuit(c, input);

	}

}
